Segala sesuatu yang ada di Python merupakan sebuah Object. Lalu setiap Object memiliki beberapa method dan atribut datanya 
sendiri yang terkait dengannya dan bisa digunakan. Lalu untuk menggunakan suatu Object secara efisien dan tepat kita harus mengenal dengan baik bagaimana harus berinteraksi dengan mereka.

List, Tuple dan Set merupakan 3 Object penting yang ada di Python. 
Dan yang paling penting dari kesamaan ketiga hal ini adalah bahwa mereka digunakan untuk Struktur Data. 
karena hal itulah kita harus struktur data bahasa pemrogramman dengan baik.

Lalu untuk Riview singat dari perbedaan ketiga data structure ini adalah:

1. List adalah tipe data kolektif yang bersifat mutable dan ordered, alias bisa diedit-edit dan bisa diakses via indeks. 
Serta didefinisikan dengan tanda kurung siku []

2. Tuple adalah tipe data kolektif yang bersifat immutable dan ordered. Dalam artian ia sama dengan list, 
hanya saja tuple tidak bisa diedit-edit. Tuple didefinisikan dengan tanda kurung biasa ()

3. Sedangkan Set adalah tipe data kolektif yang bersifat unique, unordered, 
dan unchangeable di mana semua nilainya harus unik, dan ia tidak bisa diakses via indeks (karena tidak berurut), 
dan dia tidak bisa diedit-edit (akan tetapi bisa ditambah dan dihapus). 
Set sendiri dapat digunakan dengan menggunakan Tanda kurung kurawal {}
 
Sifat	                                               List	Tuple  Set
Ordered     (Bisa diakses via indeks)	                ✅	✅	❌
Mutable     (Bisa diubah via indeks)	                ✅	❌	❌
Changeable  (Bisa ditambah anggota baru atau dihapus)	✅	❌	✅
Unique      (Semua anggota harus unik)	                ❌	❌	✅

Tipe data yang memiliki sifat “ordered” alias terurut (list dan tuple), cara mengakses nilainya bisa menggunakan indeks. 
Sedangkan variabel yang bersifat “unordered” alias tidak terurut seperti set, ia tidak bisa diakses secara eksplisit.

Untuk list dan tuple, tidak ada perbedaan dalam hal slicing data –karena keduanya bersifat ordered.
Ada pun set, ia tidak mendukung fitur slicing data.

Untuk "UBAH DATA" ada dua tipe:
a. ubah data pada indeks tertentu (yang sudah dimasukkan sebelumnya)
b. ubah data dalam artian menambahkan data baru atau menghapus data yang sudah ada

Dalam dua tipe di atas, hanya tipe data list saja yang bisa melakukan semuanya.
Sedangkan set hanya bisa mengedit data untuk tipe yang kedua.
Ada pun tuple, maka ia tidak bisa melakukan edit data sama sekali, baik tipe yang pertama mau pun tipe yang kedua.

Kita juga bisa mengunakan perintah update, namun hasil dari data yang diinginkan akan berbeda tergantung sifat dari masing-masing.
sebagai contoh set akan meghilangkan item yang sama/Duplicate.

a = {'x', 1, 4}
b = [3, 4, 1]
c = ('x', 'y', 'z')
a.update(b,c)
print(a)
{1, 3, 4, 'y', 'z', 'x'}


Lalu bagaimana dengan "MENAMBAH" Data?
Untuk mengedit data yang dalam artian “menambah data”, maka hanya ada dua tipe data yang bisa melakukannya; 
yaitu list dan set. Ada pun tuple tidak bisa melakukannya.
Kita bisa menambahkan nilai baru kepada suatu list dengan memanggil fungsi list.append(), 
dan kita bisa melakukan hal yang sama dengan set menggunakan fungsi set.add().

Kita juga bisa menggunakan fungsi insert() untuk menambahkan elemen baru ke dalam list.
Namun, ini memungkinkan menentukan indeks elemen baru. entah itu di awal atau di akhir list.
a = [1, 2, 3, 4, 5]
a.insert(0, 'a')
a
['a', 1, 2, 3, 4, 5]
Tentu sejak Insert() membutuhkan kita untuk mendefinisikan Index, ini tidak dapat digunakan untuk Set.


Bagaimana dengan "MENGHAPUS" Data?
Remove Function
Fungsi remove() hanya bisa digunakan untuk list dan set saja, karena fungsi ini langsung menghapus data yang dicari.

Delete Function
Fungsi Del() sendiri bisa digunakan di List dan tuple namun tidak di Sets karena bersifat unordered.

Discard Function
Fungsi Discard() hanya bisa digunakan untuk set saja, karena fungsi ini langsung menghapus data yang dicari.

NOTE: Ada perbedaan untuk Discard dan Remove, Remove akan memperlihatkan Error jika ada namun tidak dengan Discard.

Pop Function
Fungsi Pop() bisa digunakan untuk List dan set namun bekerja dengan cara yang berbeda.
Umumnya Fungsi Pop() dalam list akan menghapus item terakhir jika kita tidak mendefinisikan urutannya dan akan
menyimpan 'item yang terhapus' tersebut dalam sebuah variabel.
Sedangkan Pop() dalam set langsung menghapus item terakhir dalam set karena karena tidak ada urutannya.

Lalu ada lagi yang paling penting, ialah kegunaan Operator Keanggotaan (IN & NOT IN)
pada Tipe data Tuple, List dan Set.

Kita juga bisa melakukan perulangan untuk ketiga tipe data ini.
Akan tetapi perlu diperhatikan bahwa tipe data set bertipe unordered, 
artinya bahwa data yang kita definisikan bisa jadi urutannya berbeda dengan data yang disimpan oleh sistem.
Bahkan setiap kita panggil tipe data Set akan menghasilkan data yang berbeda pada akhirnya.

Tiga (dari 4) tipe data kolektif pada python –yaitu list, set dan tuple– memiliki berbagai macam kesamaan 
dan juga berbagai macam perbedaan. Masing-masing sifat pada tiap tipe data tersebut memberikan kita keleluasaan 
untuk memilih mana tipe data yang pas untuk suatu kasus, dan mana tipe data yang cocok untuk suatu kasus yang lain.

List vs Set
List dapat menyimpan semua karakter sedang Set hanya bisa menyimpan karakter yang bersifat Unik.
List itu terurut dan bisa di akses melalui indeks, sedangkan set tidak terurut dan tidak bisa di akses melalui indeks.

List or Set or Tuple
These collection objects can be converted from one to another.
Yang artinya masing-masing dari tipe data kolektif(struktur) ini bisa saling melakukan konversi.

a = [1,2,3,'a',1,3,5]
print(tuple(a))            #Dari List ke Tuple
(1, 2, 3, 'a', 1, 3, 5)
print(set(a))              #Dari List ke Set

{1, 2, 3, 5, 'a'}
b = {'a',1, 4, 8}
print(list(b))             #Dari set ke list
[8, 1, 4, 'a']
print(tuple(b))            #Dari set ke tuple
(8, 1, 4, 'a')

Combining two objects
The following code will combine two objects:
yang mana kita memiliki banyak opsi untuk melakukan operasi ini.
Dapat menggunakan Operator Tambah '+' atau dengan menggunakan Union.

a = [1,2,3]
b = [11,32,1]

print(a + b)
[1, 2, 3, 11, 32, 1]

print(tuple(a) + tuple(b))      #Duplicate Elemen masih ada
(1, 2, 3, 11, 32, 1)

--
a = {1,2,3,4}
b = {1,5,6}

print(a.union(b))               #Sedangkan jika menggunakan Union Duplicate Elemen tidak ada/menggunakan yang terbaru
{1, 2, 3, 4, 5, 6}


NOTE: Menggunakan kurung kurawal kosong atau set kosong {}, akan didefinisikan sebagai Dictionary.

SORTING/SORTING LIST/ Penyortiran
sort(): sorts the object but does not return anything.
sorted(): returns a sorted list of the items in an iterable but does not modify the original object.

Sejak Set merupakan Unordered, Fungsi ini hanya bisa dilakukan untuk List dan Tuple.
Namun fungsi Sort pada List dan Tuple juga ada perbedaannya.
Sort sendiri akan memodifikasi Object yang diterapkan jadi ini hanya bisa berlaku untuk list.
Tuple sendiri bersifat immutable yang artinya fungsi Sort() tidak berlaku untuk mereka.
a = [3,1,5,2]
a.sort()
print(a)
[1, 2, 3, 5]

Lalu bagaimana solusinya?
sorted() adalah solusinya.
Itu membuat daftar yang diurutkan dari setiap data iterable. 
Jadi kita bisa menggunakannya untuk membuat daftar yang diurutkan (Sorted List) berdasarkan tuple.
=
b = (6,1,4,2)
print(sorted(b))
[1,2,4,6]

Fungsi Len dan Count
Untuk Fungsi Len sendiri akan bekerja dengan baik bagi list, set, tuple.
Lalu untuk Count sendiri, dapat untuk menghitung jumlah sebuah 'item/data' yang ada pada list dan tuple.
karena set tidak bisa ada item dulplicate maka jika kita menggunakan perintah count maka hasilnya akan pasti berjumlah 1.
a = [1,4,5,6,1]
b = (3,4)
c = {1,2,3,4}
print(len(a), len(b), len(c))
5 2 4
print(a.count(1), b.count(3))
2 1